# Workflow는 CI를 실행하기 위한 스크립트의 모음
# 자동화된 전체 프로세스로 하나 이상의 job으로 구성됨

# Workflow의 이름
name: CI/CD

# event : workflow를 동작하게하는 trigger
# Workflow가 시작될 조건 지정 (main 브랜치에 푸시를 할 때마다 workflow를 시작하도록 작성)
on:
  push:
    branches: [ main ]

# job은 사용자가 정한 플랫폼을 통해 step이라는 일련의 과정을 실행할 수 있다.
# 여러 개의 job을 사용할 수 있으며, 여러 개의 job을 사용할 때는 서로 정보도 교환할 수 있다.
# 그리고 각각 독립적으로도 실행할 수도 있다.
jobs:
  build:
    runs-on: ubuntu-latest # 실행 환경 지정 (job의 필수 속성)
    # step : job에서 커맨드를 실행하는 독립적인 단위 (job의 필수 속성)
    # 실행 스텝 지정
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # uses 키워드는 지정한 리포지토리를 확인하고 코드에 대한 작업을 실행할 수 있다.
      # action/checkout 에는 checkout이라는 작업의 v3 버전을 실행합니다.
      - uses : actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      # name : 스텝의 이름
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      # run : 실행할 명령어
      - name: Build with Gradle
        run: ./gradlew clean build

      # josStorer/get-current-time 플러그인을 사용해 현재 시간을 가져 온다
      # 배포 버전을 지정할 때 사용됨
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # 배포용 패키지 경로 저장
      # 빌드 후 생성된 .jar 파일을 찾아서 "artifact"라는 환경 변수에 값을 넣어 준다.
      # GITHUB_ENV를 사용해 Github Workflow 전체적으로 사용할 수 있는 환경 변수를 설정할 수 있다
      - name: Set artifact
        run: echo "artifact=$(ls ./build/libs)" >> $GITHUB_ENV

      # 빈스토크 배포
      # einaregilsson/beanstalk-deploy 플러그인을 사용해서 빈스토크 배포
      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: heeyun-blog
          environment_name: Heeyun-blog-env
          version_label: github-action-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: ./build/libs/${{env.artifact}}

